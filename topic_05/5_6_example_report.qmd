---
title: "Example Report"
author: "Tehran Davis"
---

Ok now that we've covered all of our bases, let's take a moment to provide an example of what a written-up report would look like. This is the general format that I expect for the homework and will serve as a useful template moving forward for the rest of the semester. Major areas of importance will be highlighted in the headers. I'll write them as "steps" here, but you don't need to list the headers as so in your homework. One thing that I as a data analyst and professor grading data analysis is to include some language in each of my sections that chart anything that I note, impressions about the data or importantly the logic behind any decision that I make. For example if any of the assumptions are violated, I would certainly mention it in my write-up along with any potential steps I may take to address the violation (don't worry we haven't covered these...yet). So without further adieu...

## Step 1: Load in packages

```{r}
pacman::p_load(tidyverse, psych, ggpmisc, ggfortify, cowplot)
```

------------------------------------------------------------------------

## Step 2: loading in the data

Note: I'm just using the Stress and Health data from our previous walkthrough examples

```{r}
stress_data <- read_table("https://www.uvm.edu/~statdhtx/methods8/DataFiles/Tab9-2.dat")
```

------------------------------------------------------------------------

## Step 3: plotting the data

Note: I often start with just a raw plot to get a feel for the data. I worry about adding all the other features and formatting once I'm ready for the write-up

```{r}
stress_plot <- ggplot(data = stress_data, aes(x = Stress, y = lnSymptoms)) +
  geom_point()

stress_plot
```

If there was anything strange or notable in the plot, I would note it here. For example I might note that at first glance there appears to be a positive relationship between **Stress** and **lnSymptoms**, and that there aren't any data points that appear to be outstanding or potential outliers.

## Step 4: Descriptive stats

Note: even though means are not especially important in this analysis (i.e., I'm not worried about comparing the mean value of lnSymptoms to the mean of Stress), it may be worth it to look at other measures related to our scores that convey information about **variability (sd)**, **skew**, and **kurtosis**. Primarily here, I'm just looking for red flags. FWIW noting jumps out here, so we are good to move on.

```{r}
psych::describe(stress_data)
```

## Step 5: Building the model

Note: you build the model here, **BUT** I wouldn't evaluate or interpret it's output just yet. Save that until after your diagnostics!!!

```{r}
stress_symptoms_model <- lm(lnSymptoms~Stress, data = stress_data)
```

## Step 6: Model diagnostics

I will now do a visual diagnostic of the model residuals

```{r}
# remember you need ggfortify to do this
autoplot(stress_symptoms_model)
```

The visual inpection here doesn't raise any red flags.

## Step 7: Evaluate the model

Now it's time to take a look at our model:

```{r}
summary(stress_symptoms_model)
```

## Step 8: APA camera ready write-up

This has 2 parts

1.  camera ready figure with caption
2.  data-analysis write-up

(Also, FWIW, in usually hide the code in this section using the `#| echo: false` argument in the chunk options. This way you just see the plot and written parts with no interruption. [See here for examples.](https://quarto.org/docs/computations/execution-options.html#output-options))

First the camera-ready plot, including the regression line and equation. Also be sure to type in a caption below your plot (e.g., Figure 1):

```{r}
# remember you need ggpmisc loaded to do the line and equation
# and cowplot to APAify it

ggplot(data = stress_data, aes(x = Stress, y = lnSymptoms)) + 
  geom_point(color="gray", size = 0.5) + 
  stat_poly_line(level = .95, color = "black") +
  stat_poly_eq(aes(label = paste(after_stat(eq.label),
                                 after_stat(rr.label), sep = "*\", \"*"))) +
  theme_cowplot()
```

**Figure 1. Natural-log of the number of symptoms as predicted by stress scores**

Next the write-up:

We hypothesized that increases in self-reported measures of Stress would correspond to increases in the number of self-reported symptoms. Given that our Symptoms data showed a significant violation of the normality assumption, we transformed these scores using a log-transformation (**lnSymptoms**). To test this hypothesis the data were submitted to a simple linear regression with lnSymptoms as the outcome and Stress as our predictor. The resulting model was significant, $r^2$=.28; $F$(1,105)=40.73, $p$\<.001, and revealed a significant positive relationship between the Stress and Symptoms, $b$=.008; $t$(105)=6.38, $p$\<.001.

## Step 9: Turn it in!!
