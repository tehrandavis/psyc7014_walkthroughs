sum(cohorts$age - class_ages_mode) %>% round()
class_ages_mean <- mean(cohorts$age)
cohorts$age - class_ages_mean
sum(cohorts$age - class_ages_mean) %>% round()
range(cohorts$age)
# 1. guessed age:
guess <- 27
# 2. resulting difference scores, squared
diffScores <- (ages-guess)
# 3. the sum of squares:
sumDiff <- sum(diffScores)
# 4. show the sumDiff (example)
show(sumDiff)
# create a vector of all possible integers within our range:
rangeAges <- min(cohorts$age):max(cohorts$age)
# create an empty vector to save our resulting sum of differences
sumDiffguess <- vector()
guessedAge <- vector()
# here "i" indexes which value from the range to pull, for example when i=1, we are pulling the first number in the sequence
for(i in 1:length(rangeAges)){
guess <- rangeAges[i]
diffScores <- (ages-guess)
sumDiff <- sum(diffScores)
# save results to sumDiffguess
guessedAge[i] <- guess
sumDiffguess[i] <- sumDiff
}
diffAges_df <- tibble(guessedAge,sumDiffguess) #combine the two vectors to single data frame
diffAges_df
# note I did this all in one step:
sumDiffPlot <- ggplot2::ggplot(data = diffAges_df,
aes(x=guessedAge,
y=sumDiffguess)) +
geom_point() +
geom_line() +
geom_vline(xintercept=mean(cohorts$age), # using actual ages from
color="blue", size = 1) +
geom_hline(yintercept=0, color = "red", size=3)+
theme_minimal()
sumDiffPlot
# create a vector of all possible integers within our range:
rangeAges <- min(cohorts$age):max(cohorts$age)
# create an empty vector to save our resulting sum of differences
SSguess <- vector()
guessedAge <- vector()
# here "i" indexes which value from the range to pull, for example when i=1, we are pulling the first number in the sequence
for(i in 1:length(rangeAges)){
guess <- rangeAges[i]
diffScores <- (ages-guess)
SSDiff <- sum(diffScores^2)
# save SS to SSguess
guessedAge[i] <- guess
SSguess[i] <- SSDiff
}
SS_Ages_df <- tibble(guessedAge,SSguess) #combine the two vectors to single data frame
show(SS_Ages_df)
SS_Plot <- ggplot2::ggplot(data = SS_Ages_df,
aes(x=guessedAge,
y=SSguess)) +
geom_point() +
geom_smooth(color = "black") +
geom_vline(xintercept=mean(cohorts$age), # using actual ages from
color="red",
size=2) +
theme_minimal()
SS_Plot
# minimum value of SSguess is the SS about the mean
min(SS_Ages_df$SSguess)
yearsUG <- c(17,8,7,1,15,12,1,2,3,2,5,10,4,2,6,4,3,15,5,2,1,3,1,4,2,1,3,4,4,5,3)
cohorts <- cohorts %>% mutate("yearsUG" = yearsUG)
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages)) + geom_point()
means_model <- lm(formula = ages~1,data = cohorts)
# add the predicteds and residuals from the means model to our cohorts dataframe:
cohorts <- cohorts %>% mutate(means_fitted = means_model$fitted.values,
means_resids = means_model$residuals)
ggplot2::ggplot(cohorts, aes(x=ages,y=ages)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "blue") + # Add the predicted values
geom_segment(aes(xend = ages, yend = means_fitted), color="red", linetype="dotted")
# define squares for means model
cohorts <-
cohorts %>%
mutate(mean_xmin = age,
mean_xmax = age-means_resids,
mean_ymin = age,
mean_ymax = age-means_resids)
# plot
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none") + ylim(c(20,45))
years_model <- lm(formula = ages~yearsUG, data = cohorts)
# add the predicteds and residuals from the years model to our df:
cohorts <- cohorts %>% mutate(years_fitted = years_model$fitted.values,
years_resids = years_model$residuals)
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "blue") + # Add the predicted values
geom_segment(aes(xend = yearsUG, yend = years_fitted), color="red", linetype="dotted")
cohorts <-
cohorts %>%
mutate(years_xmin = age,
years_xmax = age-years_resids,
years_ymin = age,
years_ymax = age-years_resids)
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = yearsUG-years_resids/2,
y = age-years_resids/2,
height = years_resids,
width = years_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none") + ylim(c(20,45))
tibble("means_model_SS"=cohorts$means_resids^2 %>% sum(), #sum of squares
"years_model_SS"=cohorts$years_resids^2 %>% sum() #sum of squares
) %>% gt()
means_model_plot <-
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none") + ylim(c(20,45))
years_model_plot <-
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = yearsUG-years_resids/2,
y = age-years_resids/2,
height = years_resids,
width = years_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none") + ylim(c(20,45))
cowplot::plot_grid(means_model_plot,years_model_plot, labels = c("mean only", "mean+yearsUG"))
means_model_plot <-
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + ylim(c(20,45)) + xlab("predictor: mean + years UG")) + ylim(c(20,45))
pacman::p_load(tidyverse, # data frames and data wrangling
gt, # a package for making nice tables
DescTools, # a package for getting the mode
psych,
cowplot # for plotting multiple plots in one figure
)
names <- c("Tehran", "Carlos", "Jaquana", "Frenchy", "Taraneh","Corinne", "Cherish", "Sabrina", "Stephanie", "Taylor", "Sandra", "Emmanuel", "Jamie", "Heather", "Christine", "Dylanne", "Emily", "Tarcisio", "nabiha", "james", "chris", "margaret", "emily", "sarah", "nate", "tyra", "julia", "angela", "allie", "daniel", "sierra")
ages <- c(41, 31, 31, 21, 35, 31, 22, 22, 22, 24, 25, 31, 23, 22, 22, 23, 22, 37, 28,24,22,27,22,24,26,22,24,28,24,29,24)
library(tidyverse)
cohorts <- tibble("person" = names,
"age" = ages)
cohorts
psych::describe(cohorts)
pacman::p_load(DescTools) # load the package
DescTools::Mode(cohorts$age) # get the mode
# creating a histogram:
# note I did this all in one step:
classAgesPlot <- ggplot2::ggplot(data = cohorts, aes(x=age)) +
geom_histogram(binwidth = 1,
color = "black",
fill = "lightblue",
aes(y=..density..)) +
stat_function(fun = dnorm, # generate theoretical norm data
color = "red", # color the line red
args=list(mean = mean(cohorts$age), # build around mean
sd = sd(cohorts$age))) +
theme_cowplot() + # make it pretty
scale_y_continuous(expand = c(0, 0))  # Adjust the expand argument
classAgesPlot
classAgesPlot +
# mean is a red line
geom_vline(xintercept=mean(cohorts$age),
color="red",
size = 1.5) +
# median is a blue line
geom_vline(xintercept=median(cohorts$age),
color="orange",
linetype="solid",
size = 1.5) +
# mode is an orange line
geom_vline(xintercept=DescTools::Mode(cohorts$age),
color="yellow",
size = 1.5)
class_ages_mode <- DescTools::Mode(cohorts$age)
cohorts$age - class_ages_mode
sum(cohorts$age - class_ages_mode) %>% round()
class_ages_mean <- mean(cohorts$age)
cohorts$age - class_ages_mean
sum(cohorts$age - class_ages_mean) %>% round()
range(cohorts$age)
# 1. guessed age:
guess <- 27
# 2. resulting difference scores, squared
diffScores <- (ages-guess)
# 3. the sum of squares:
sumDiff <- sum(diffScores)
# 4. show the sumDiff (example)
show(sumDiff)
# create a vector of all possible integers within our range:
rangeAges <- min(cohorts$age):max(cohorts$age)
# create an empty vector to save our resulting sum of differences
sumDiffguess <- vector()
guessedAge <- vector()
# here "i" indexes which value from the range to pull, for example when i=1, we are pulling the first number in the sequence
for(i in 1:length(rangeAges)){
guess <- rangeAges[i]
diffScores <- (ages-guess)
sumDiff <- sum(diffScores)
# save results to sumDiffguess
guessedAge[i] <- guess
sumDiffguess[i] <- sumDiff
}
diffAges_df <- tibble(guessedAge,sumDiffguess) #combine the two vectors to single data frame
diffAges_df
# note I did this all in one step:
sumDiffPlot <- ggplot2::ggplot(data = diffAges_df,
aes(x=guessedAge,
y=sumDiffguess)) +
geom_point() +
geom_line() +
geom_vline(xintercept=mean(cohorts$age), # using actual ages from
color="blue", size = 1) +
geom_hline(yintercept=0, color = "red", size=3)+
theme_minimal()
sumDiffPlot
# create a vector of all possible integers within our range:
rangeAges <- min(cohorts$age):max(cohorts$age)
# create an empty vector to save our resulting sum of differences
SSguess <- vector()
guessedAge <- vector()
# here "i" indexes which value from the range to pull, for example when i=1, we are pulling the first number in the sequence
for(i in 1:length(rangeAges)){
guess <- rangeAges[i]
diffScores <- (ages-guess)
SSDiff <- sum(diffScores^2)
# save SS to SSguess
guessedAge[i] <- guess
SSguess[i] <- SSDiff
}
SS_Ages_df <- tibble(guessedAge,SSguess) #combine the two vectors to single data frame
show(SS_Ages_df)
SS_Plot <- ggplot2::ggplot(data = SS_Ages_df,
aes(x=guessedAge,
y=SSguess)) +
geom_point() +
geom_smooth(color = "black") +
geom_vline(xintercept=mean(cohorts$age), # using actual ages from
color="red",
size=2) +
theme_minimal()
SS_Plot
# minimum value of SSguess is the SS about the mean
min(SS_Ages_df$SSguess)
yearsUG <- c(17,8,7,1,15,12,1,2,3,2,5,10,4,2,6,4,3,15,5,2,1,3,1,4,2,1,3,4,4,5,3)
cohorts <- cohorts %>% mutate("yearsUG" = yearsUG)
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages)) + geom_point()
means_model <- lm(formula = ages~1,data = cohorts)
# add the predicteds and residuals from the means model to our cohorts dataframe:
cohorts <- cohorts %>% mutate(means_fitted = means_model$fitted.values,
means_resids = means_model$residuals)
ggplot2::ggplot(cohorts, aes(x=ages,y=ages)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "blue") + # Add the predicted values
geom_segment(aes(xend = ages, yend = means_fitted), color="red", linetype="dotted")
# define squares for means model
cohorts <-
cohorts %>%
mutate(mean_xmin = age,
mean_xmax = age-means_resids,
mean_ymin = age,
mean_ymax = age-means_resids)
# plot
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none") + ylim(c(20,45))
years_model <- lm(formula = ages~yearsUG, data = cohorts)
# add the predicteds and residuals from the years model to our df:
cohorts <- cohorts %>% mutate(years_fitted = years_model$fitted.values,
years_resids = years_model$residuals)
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "blue") + # Add the predicted values
geom_segment(aes(xend = yearsUG, yend = years_fitted), color="red", linetype="dotted")
cohorts <-
cohorts %>%
mutate(years_xmin = age,
years_xmax = age-years_resids,
years_ymin = age,
years_ymax = age-years_resids)
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = yearsUG-years_resids/2,
y = age-years_resids/2,
height = years_resids,
width = years_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none") + ylim(c(20,45))
tibble("means_model_SS"=cohorts$means_resids^2 %>% sum(), #sum of squares
"years_model_SS"=cohorts$years_resids^2 %>% sum() #sum of squares
) %>% gt()
means_model_plot <-
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + ylim(c(20,45)) + xlab("predictor: mean + years UG")) + ylim(c(20,45))
means_model_plot <-
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + ylim(c(20,45)) + xlab("predictor: mean + years UG") + ylim(c(20,45))
means_model_plot <-
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + xlab("predictor: mean + years UG")
years_model_plot <-
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = yearsUG-years_resids/2,
y = age-years_resids/2,
height = years_resids,
width = years_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + ylim(c(20,45)) + xlab("predictor: mean + years UG")
cowplot::plot_grid(means_model_plot,years_model_plot
)
means_model_plot <-
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + xlab("predictor: mean + years UG")
years_model_plot <-
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = yearsUG-years_resids/2,
y = age-years_resids/2,
height = years_resids,
width = years_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + xlab("predictor: mean + years UG")
cowplot::plot_grid(means_model_plot,years_model_plot
means_model_plot <-
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + xlab("predictor: mean + years UG")
years_model_plot <-
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = yearsUG-years_resids/2,
y = age-years_resids/2,
height = years_resids,
width = years_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + xlab("predictor: mean + years UG")
cowplot::plot_grid(means_model_plot,years_model_plot)
means_model_plot <-
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + xlab("predictor: mean")
years_model_plot <-
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = yearsUG-years_resids/2,
y = age-years_resids/2,
height = years_resids,
width = years_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + xlab("predictor: mean + years UG")
cowplot::plot_grid(means_model_plot,years_model_plot)
means_model_plot <-
ggplot2::ggplot(cohorts, aes(x=ages,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = means_fitted), color = "red", size = 2) + # Add the predicted values
geom_tile(aes(x = age-means_resids/2,
y = age-means_resids/2,
height = means_resids,
width = means_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + xlab("predictor: mean")
years_model_plot <-
ggplot2::ggplot(cohorts, aes(x=yearsUG,y=ages, col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = years_fitted), color = "red", size = 2) + # Add the predicted values
geom_tile(aes(x = yearsUG-years_resids/2,
y = age-years_resids/2,
height = years_resids,
width = years_resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none", axis.text.x = element_blank()) + xlab("predictor: mean + years UG")
cowplot::plot_grid(means_model_plot,years_model_plot)
#| echo: false
#|
means_model <- lm(formula = scale(ages)~1,data = cohorts)
years_model <- lm(formula = scale(ages)~scale(yearsUG),data = cohorts)
cohorts <-
cohorts %>%
mutate(years_fitted = years_model$fitted.values,
years_resids = years_model$residuals,
means_fitted = means_model$fitted.values,
means_resids = means_model$residuals)
means_model_data <- cohorts %>%
select(person, age, means_fitted, means_resids, mean_xmin, mean_xmax, mean_ymin, mean_ymax) %>%
rename(fitted = means_fitted,
resids = means_resids,
xmin = mean_xmin,
xmax = mean_xmax,
ymin = mean_ymin,
ymax = mean_ymax) %>%
mutate(states = "means_model_plot",
xvals = scale(age))
years_model_data <- cohorts %>%
select(person, age, years_fitted, years_resids, years_xmin, years_xmax, years_ymin, years_ymax) %>%
rename(fitted = years_fitted,
resids = years_resids,
xmin = years_xmin,
xmax = years_xmax,
ymin = years_ymin,
ymax = years_ymax) %>%
mutate(states = "years_model_plot",
xvals = scale(yearsUG))
transition_df <- bind_rows(means_model_data, years_model_data)
# Only needed if not already installed
pacman::p_load(gganimate)
ggplot2::ggplot(transition_df, aes(x= xvals,y=scale(age), col = person)) +
geom_point() + # add actual data points
geom_line(aes(y = fitted), color = "red") + # Add the predicted values
geom_tile(aes(x = xvals-resids/2,
y = scale(age)-resids/2,
height = resids,
width = resids,
fill = person), alpha = .1) +
theme_cowplot() +
theme(aspect.ratio=1, legend.position = "none",
axis.text.x = element_blank(),
axis.text.y = element_blank()
) + xlab("predictor values") + ylab("outcome values") +
transition_states(states, transition_length = .5, state_length = 2)
